(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{112:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return l}));var n=a(3),r=a(7),i=(a(0),a(155)),o={title:"@bangle.dev/react-emoji-suggest",sidebar_label:"@bangle.dev/react-emoji-suggest",packageName:"@bangle.dev/react-emoji-suggest",id:"react_emoji_suggest"},c={unversionedId:"api/react_emoji_suggest",id:"api/react_emoji_suggest",isDocsHomePage:!1,title:"@bangle.dev/react-emoji-suggest",description:"contrib",source:"@site/docs/api/react_emoji_suggest.md",slug:"/api/react_emoji_suggest",permalink:"/docs/api/react_emoji_suggest",editUrl:"https://github.com/bangle-io/bangle.dev/edit/master/_bangle-website/docs/api/react_emoji_suggest.md",version:"current",sidebar_label:"@bangle.dev/react-emoji-suggest",sidebar:"docs",previous:{title:"@bangle.dev/react",permalink:"/docs/api/react"},next:{title:"@bangle.dev/react-menu",permalink:"/docs/api/react_menu"}},p=[{value:"Installation",id:"installation",children:[]},{value:"Styling",id:"styling",children:[]},{value:"emojiSuggest: Component",id:"emojisuggest-component",children:[{value:"plugins({ ... }): Plugins",id:"plugins---plugins",children:[]},{value:"commands: CommandObject",id:"commands-commandobject",children:[]}]},{value:"EmojiSuggest: React.Element",id:"emojisuggest-reactelement",children:[]}],s={rightToc:p};function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.a)("p",null,Object(i.a)("inlineCode",{parentName:"p"},"contrib")),Object(i.a)("p",null,"This package provides you suggestions for picking your favourite emojis \ud83d\ude0e!"),Object(i.a)("h3",{id:"installation"},"Installation"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{}),"# peer deps\nnpm install @bangle.dev/core @bangle.dev/emoji @bangle.dev/react @bangle.dev/tooltip\nnpm install @bangle.dev/react-emoji-suggest\n")),Object(i.a)("h2",{id:"styling"},"Styling"),Object(i.a)("p",null,"Please use the stylesheet ",Object(i.a)("inlineCode",{parentName:"p"},"style.css")," like:"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"import '@bangle.dev/react-emoji-suggest/style.css';\n")),Object(i.a)("h2",{id:"emojisuggest-component"},"emojiSuggest: ",Object(i.a)("a",Object(n.a)({parentName:"h2"},{href:"/docs/api/core/#component"}),"Component")),Object(i.a)("p",null,"Shows a suggestion tooltip next to the trigger. Use ",Object(i.a)("inlineCode",{parentName:"p"},"ArrowUp")," , ",Object(i.a)("inlineCode",{parentName:"p"},"ArrowDown")," , ",Object(i.a)("inlineCode",{parentName:"p"},"ArrowLeft")," ",Object(i.a)("inlineCode",{parentName:"p"},"ArrowRight")," to select emoji. Use ",Object(i.a)("inlineCode",{parentName:"p"},"Enter")," or ",Object(i.a)("inlineCode",{parentName:"p"},"MouseClick")," to insert a selected emoji. Pressing ",Object(i.a)("inlineCode",{parentName:"p"},"Escape")," will dismiss the suggestion tooltip."),Object(i.a)("h4",{id:"spec---nodespec"},"spec({ ... }): ",Object(i.a)("a",Object(n.a)({parentName:"h4"},{href:"/docs/api/core/#spec"}),"NodeSpec")),Object(i.a)("p",null,"Named parameters:"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("p",{parentName:"li"},Object(i.a)("strong",{parentName:"p"},"markName"),": string",Object(i.a)("br",{parentName:"p"}),"\n","The mark name associated with this component. Please make sure this name is not already in use by existing nodes or marks.")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("p",{parentName:"li"},Object(i.a)("strong",{parentName:"p"},"trigger"),": ?string=':'",Object(i.a)("br",{parentName:"p"}),"\n","The trigger key when typed that initiates the suggestions. Triggering also needs to have a space or new line precede the trigger string."))),Object(i.a)("h3",{id:"plugins---plugins"},"plugins({ ... }): ",Object(i.a)("a",Object(n.a)({parentName:"h3"},{href:"/docs/api/core/#plugins"}),"Plugins")),Object(i.a)("p",null,"Named parameters:"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("p",{parentName:"li"},Object(i.a)("strong",{parentName:"p"},"key:")," ?",Object(i.a)("a",Object(n.a)({parentName:"p"},{href:"https://prosemirror.net/docs/ref/#state.PluginKey"}),"Prosemirror.PluginKey"))),Object(i.a)("li",{parentName:"ul"},Object(i.a)("p",{parentName:"li"},Object(i.a)("strong",{parentName:"p"},"markName"),": string",Object(i.a)("br",{parentName:"p"}),"\n","The ",Object(i.a)("inlineCode",{parentName:"p"},"markName")," you specified in above in the ",Object(i.a)("inlineCode",{parentName:"p"},"spec"),".")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("p",{parentName:"li"},Object(i.a)("strong",{parentName:"p"},"tooltipRenderOpts"),": ?","[tooltipRenderOpts]")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("p",{parentName:"li"},Object(i.a)("strong",{parentName:"p"},"getEmojiGroups:")," fn(queryText: string) -> Array<{groupName: string, emojis: EmojisArray}>",Object(i.a)("br",{parentName:"p"}),"\n","A callback which should return the filtered emojis corresponding to the query text. The ",Object(i.a)("inlineCode",{parentName:"p"},"groupName")," will be used in the UI to name the category of the emojis."),Object(i.a)("ul",{parentName:"li"},Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"EmojisArray"),": Array<","[","string, string","]",">",Object(i.a)("br",{parentName:"li"}),"An array where each item is a pair of ",Object(i.a)("inlineCode",{parentName:"li"},"emojiAlias")," and an emoji character, for example ",Object(i.a)("inlineCode",{parentName:"li"},'[["office_worker", "\ud83e\uddd1\u200d\ud83d\udcbc"], ["ninja", "\ud83e\udd77"]]'),". The ",Object(i.a)("inlineCode",{parentName:"li"},"emojiAlias")," must be unique."))),Object(i.a)("li",{parentName:"ul"},Object(i.a)("p",{parentName:"li"},Object(i.a)("strong",{parentName:"p"},"emojis"),": Array<","[","string, string","]",">",Object(i.a)("br",{parentName:"p"}),"\n","An array of emoji description and the emoji character,")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("p",{parentName:"li"},Object(i.a)("strong",{parentName:"p"},"maxItems:")," ?number=200",Object(i.a)("br",{parentName:"p"}),"\n","The maximum number of items that can be shown at a time."))),Object(i.a)("h3",{id:"commands-commandobject"},"commands: ",Object(i.a)("a",Object(n.a)({parentName:"h3"},{href:"/docs/api/core/#commandobject"}),"CommandObject")),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("p",{parentName:"li"},Object(i.a)("strong",{parentName:"p"},"queryTriggerText"),"(key: ",Object(i.a)("a",Object(n.a)({parentName:"p"},{href:"https://prosemirror.net/docs/ref/#state.PluginKey"}),"Prosemirror.PluginKey"),"): ",Object(i.a)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/core/#command"}),"Command"),Object(i.a)("br",{parentName:"p"}),"\n","Query the trigger text that is being used to filter the ",Object(i.a)("inlineCode",{parentName:"p"},"emojis"),". For example, with ",Object(i.a)("inlineCode",{parentName:"p"},":")," as trigger, if the user typed ",Object(i.a)("inlineCode",{parentName:"p"},":man")," , ",Object(i.a)("inlineCode",{parentName:"p"},"man")," will the trigger text.")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("p",{parentName:"li"},Object(i.a)("strong",{parentName:"p"},"selectEmoji"),"(key: ",Object(i.a)("a",Object(n.a)({parentName:"p"},{href:"https://prosemirror.net/docs/ref/#state.PluginKey"}),"Prosemirror.PluginKey"),", emojiAlias: string): ",Object(i.a)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/core/#command"}),"Command"),Object(i.a)("br",{parentName:"p"}),"\n","Programmatically select an emoji. For example if ",Object(i.a)("inlineCode",{parentName:"p"},'emojis=["office_worker", "\ud83e\uddd1\u200d\ud83d\udcbc"], ["ninja", "\ud83e\udd77"]]'),", executing command with ",Object(i.a)("inlineCode",{parentName:"p"},"selectEmoji(key, 'ninja')(state, dispatch)")," will create a ",Object(i.a)("inlineCode",{parentName:"p"},"\ud83e\udd77")," emoji."))),Object(i.a)("p",null,Object(i.a)("strong",{parentName:"p"},"Usage")),Object(i.a)("p",null,"Here is a sample usage of constructing the ",Object(i.a)("inlineCode",{parentName:"p"},"getEmoji")," callback that returns the filtered emojis corresponding to a query."),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const data = [\n  { name: 'a-1', emojis: [['grinning', '\ud83d\ude00']] },\n  { name: 'a-2', emojis: [['smiley', '\ud83d\ude03']] },\n  { name: 'a-3', emojis: [['smile', '\ud83d\ude04']] },\n];\n\nconst getEmojiGroups = (queryText) => {\n  return data\n    .map((group) => {\n      return {\n        name: group.name,\n        emojis: group.emojis.filter(\n          ([alias]) => alias.includes(query) || query.includes(alias),\n        ),\n      };\n    })\n    .filter((r) => r.emojis.length > 0);\n};\n")),Object(i.a)("p",null,"Additional links:"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("p",{parentName:"li"},Object(i.a)("a",Object(n.a)({parentName:"p"},{href:"https://bangle.dev/docs/api/emoji#emoji-data-source"}),"emoji component's API"),".")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("p",{parentName:"li"},Object(i.a)("a",Object(n.a)({parentName:"p"},{href:"/docs/examples/react-emoji-suggest"}),"Emoji Suggest example")))),Object(i.a)("h2",{id:"emojisuggest-reactelement"},"EmojiSuggest: ",Object(i.a)("a",Object(n.a)({parentName:"h2"},{href:"https://reactjs.org/docs/react-api.html#reactcomponent"}),"React.Element")),Object(i.a)("p",null,Object(i.a)("strong",{parentName:"p"},"Props")),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("strong",{parentName:"li"},"emojiSuggestKey"),": ?",Object(i.a)("a",Object(n.a)({parentName:"li"},{href:"https://prosemirror.net/docs/ref/#state.PluginKey"}),"Prosemirror.PluginKey"),Object(i.a)("br",{parentName:"li"}),"Pass the key that was used in ",Object(i.a)("inlineCode",{parentName:"li"},"plugins()"),".")),Object(i.a)("p",null,Object(i.a)("strong",{parentName:"p"},"Usage")),Object(i.a)("p",null,"Please see the ",Object(i.a)("a",Object(n.a)({parentName:"p"},{href:"/docs/examples/react-emoji-suggest"}),"Emoji Suggest example")))}l.isMDXComponent=!0},155:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),l=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},j=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),j=l(a),b=n,u=j["".concat(o,".").concat(b)]||j[b]||m[b]||i;return a?r.a.createElement(u,c(c({ref:t},s),{},{components:a})):r.a.createElement(u,c({ref:t},s))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=j;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var s=2;s<i;s++)o[s]=a[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}j.displayName="MDXCreateElement"}}]);