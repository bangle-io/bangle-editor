(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{113:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return i})),t.d(a,"metadata",(function(){return c})),t.d(a,"rightToc",(function(){return p})),t.d(a,"default",(function(){return m}));var n=t(3),o=t(7),r=(t(0),t(155)),i={title:"@bangle.dev/emoji",sidebar_label:"@bangle.dev/emoji",packageName:"@bangle.dev/emoji",id:"emoji"},c={unversionedId:"api/emoji",id:"api/emoji",isDocsHomePage:!1,title:"@bangle.dev/emoji",description:"Installation",source:"@site/docs/api/emoji.md",slug:"/api/emoji",permalink:"/docs/api/emoji",editUrl:"https://github.com/bangle-io/bangle.dev/edit/master/_bangle-website/docs/api/emoji.md",version:"current",sidebar_label:"@bangle.dev/emoji",sidebar:"docs",previous:{title:"@bangle.dev/core",permalink:"/docs/api/core"},next:{title:"@bangle.dev/react",permalink:"/docs/api/react"}},p=[{value:"Installation",id:"installation",children:[]},{value:"emoji: Component",id:"emoji-component",children:[{value:"Markdown support",id:"markdown-support",children:[]},{value:"Emoji Data source",id:"emoji-data-source",children:[]}]}],l={rightToc:p};function m(e){var a=e.components,t=Object(o.a)(e,["components"]);return Object(r.a)("wrapper",Object(n.a)({},l,t,{components:a,mdxType:"MDXLayout"}),Object(r.a)("h3",{id:"installation"},"Installation"),Object(r.a)("pre",null,Object(r.a)("code",Object(n.a)({parentName:"pre"},{}),"# peer deps\nnpm install @bangle.dev/core\nnpm install @bangle.dev/emoji\n")),Object(r.a)("h2",{id:"emoji-component"},"emoji: ",Object(r.a)("a",Object(n.a)({parentName:"h2"},{href:"/docs/api/core/#component"}),"Component")),Object(r.a)("p",null,"Allows you to show emojis \ud83d\ude0e in your editor. "),Object(r.a)("h4",{id:"spec---nodespec"},"spec({ ... }): ",Object(r.a)("a",Object(n.a)({parentName:"h4"},{href:"/docs/api/core/#spec"}),"NodeSpec")),Object(r.a)("p",null,"Named parameters:"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)("p",{parentName:"li"},Object(r.a)("strong",{parentName:"p"},"getEmoji:")," fn(emojiAlias: string ) -> string",Object(r.a)("br",{parentName:"p"}),"\n","A callback that gets called with ",Object(r.a)("inlineCode",{parentName:"p"},"emojiAlias")," (a plain text representation of the emoji like ",Object(r.a)("inlineCode",{parentName:"p"},"smiley"),", ",Object(r.a)("inlineCode",{parentName:"p"},"green_book"),") and should return the emoji character associated with the alias.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)("p",{parentName:"li"},Object(r.a)("strong",{parentName:"p"},"defaultEmojiAlias"),": ?string='smiley'",Object(r.a)("br",{parentName:"p"}),"\n","If alias to use when not provided."))),Object(r.a)("h4",{id:"commands-commandobject"},"commands: ",Object(r.a)("a",Object(n.a)({parentName:"h4"},{href:"/docs/api/core/#commandobject"}),"CommandObject")),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)("strong",{parentName:"li"},"insertEmoji"),"(emojiAlias: string): ",Object(r.a)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/core/#command"}),"Command"),Object(r.a)("br",{parentName:"li"}),"A command that inserts an emoji.")),Object(r.a)("h3",{id:"markdown-support"},"Markdown support"),Object(r.a)("p",null,"This component supports markdown by serializing emoji nodes into ",Object(r.a)("inlineCode",{parentName:"p"},":<emojiAlias>:"),"For example, ",Object(r.a)("inlineCode",{parentName:"p"},"\ud83d\ude08")," will be serialized into ",Object(r.a)("inlineCode",{parentName:"p"},":smiling_imp:"),"."),Object(r.a)("p",null,"This package uses the npm package ",Object(r.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/markdown-it/markdown-it-emoji"}),"markdown-it-emoji")," to provide this support. It also exports the ",Object(r.a)("inlineCode",{parentName:"p"},"lite")," version of the plugin which allows for passing your own emoji dataset."),Object(r.a)("p",null,"Sample code for setting up markdown."),Object(r.a)("pre",null,Object(r.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"import {\n  markdownParser,\n  markdownSerializer,\n  defaultMarkdownItTokenizer,\n} from '@bangle.dev/markdown';\nimport { emoji, emojiMarkdownItPlugin } from '@bangle.dev/emoji';\n\nconst myEmojiDefs = {\n  grinning: '\ud83d\ude00',\n  smiley: '\ud83d\ude03',\n  smile: '\ud83d\ude04',\n  grin: '\ud83d\ude01',\n  laughing: '\ud83d\ude06',\n  satisfied: '\ud83d\ude06',\n  sweat_smile: '\ud83d\ude05',\n  rofl: '\ud83e\udd23',\n  joy: '\ud83d\ude02',\n  slightly_smiling_face: '\ud83d\ude42',\n};\n\nconst specRegistry = [\n  // your other specs,\n  emoji.spec({\n    getEmoji: (emojiAlias) => myEmojiDefs[emojiAlias] || '\u2753',\n  }),\n];\n\nconst parser = markdownParser(\n  specRegistry,\n  defaultMarkdownItTokenizer.use(emojiMarkdownItPlugin, {\n    // https://github.com/markdown-it/markdown-it-emoji options go here\n    defs: myEmojiDefs,\n  }),\n);\n\nconst serializer = markdownSerializer(specRegistry);\n")),Object(r.a)("h3",{id:"emoji-data-source"},"Emoji Data source"),Object(r.a)("p",null,"This package does not provide emoji data, you will have to load it yourself. If you want you can use ",Object(r.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/bangle-io/emoji-lookup-data"}),"emoji-lookup-data")," datasource which is an optimized fork of ",Object(r.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/github/gemoji"}),"gemoji"),". Or, you can use ",Object(r.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/markdown-it/markdown-it-emoji/tree/master/lib/data"}),"markdown-it-emoji's data")," for an even smaller subset of data."),Object(r.a)("p",null,"\ud83d\udcd6 See\xa0",Object(r.a)("a",Object(n.a)({parentName:"p"},{href:"https://bangle.dev/docs/examples/markdown-editor"}),"Bangle Markdown example")),Object(r.a)("p",null,"\ud83d\udcd6 See ",Object(r.a)("a",Object(n.a)({parentName:"p"},{href:"https://bangle.dev/docs/api/markdown"}),"Markdown component API")))}m.isMDXComponent=!0},155:function(e,a,t){"use strict";t.d(a,"a",(function(){return j}));var n=t(0),o=t.n(n);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),m=function(e){var a=o.a.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):c(c({},a),e)),t},s={inlineCode:"code",wrapper:function(e){var a=e.children;return o.a.createElement(o.a.Fragment,{},a)}},d=o.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,r=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=m(t),j=n,b=d["".concat(i,".").concat(j)]||d[j]||s[j]||r;return t?o.a.createElement(b,c(c({ref:a},l),{},{components:t})):o.a.createElement(b,c({ref:a},l))}));function j(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var r=t.length,i=new Array(r);i[0]=d;var c={};for(var p in a)hasOwnProperty.call(a,p)&&(c[p]=a[p]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<r;l++)i[l]=t[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);